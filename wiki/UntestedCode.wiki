I'm not sure this code works because I couldn't run it locally on my computer.  The event listeners need the correct ids for the "start game" and "settings" buttons.  Really, I'm just hoping this is close to correct because I'm not sure how I can test it.  This is based on the simon.html file from last week with my code added in.  

<script type="text/javascript">
// Function called when start game is pushed
  function startGame()
{
    gfx.clearRect(0, 0, canvas.width, canvas.height);
    gfx.drawSvg("images/blue_game_button.svg", game_button_right_pos, game_button_top_height, game_button_dim, game_button_dim);
    gfx.drawSvg("images/green_game_button.svg", game_button_right_pos, game_button_bottom_height, game_button_dim, game_button_dim);
    gfx.drawSvg("images/yellow_game_button.svg", game_button_left_pos, game_button_bottom_height, game_button_dim, game_button_dim); 
    gfx.drawSvg("images/red_game_button.svg", game_button_left_pos, game_button_top_height, game_button_dim, game_button_dim); 
    //gfx.drawSvg("images/back_button.svg", )
}

// Function called when settings is pushed

function settings()
{
    gfx.clearRect(0, 0, canvas.width, canvas.height);
    gfx.fillStyle = "blue";
    gfx.font = "bold 16px Arial";
    gfx.fillText("Settings", 100, 100);
	//gfx.drawSvg("images/back_button.svg", )
}
  
var aspectRatio = 4 / 3;

// Find the canvas and graphics context.
var canvas = document.getElementById("canvas");
var gfx = canvas.getContext("2d");
  
// Scale it to the window.
if (window.innerWidth >= window.innerHeight * aspectRatio) {
    canvas.width  = window.innerHeight * aspectRatio;
    canvas.height = window.innerHeight;
} else {
    canvas.width  = window.innerWidth;
    canvas.height = window.innerWidth / aspectRatio;
}

// Make the canvas white with a 1-pixel red border to make sure it is exactly the right size in each environment.
gfx.fillStyle = "white";
gfx.fillRect(0, 0, canvas.width, canvas.height);

gfx.beginPath();
gfx.rect(0, 0, canvas.width, canvas.height);

gfx.strokeStyle = "red";
gfx.stroke();

// Draw the menu buttons.
// TODO: Get the unscaled dimensions from each SVG file.
var unscaled_button_width  = 281;
var unscaled_button_height = 61;

var button_width  = canvas.width / 3;
var button_height = unscaled_button_height * button_width / unscaled_button_width;

var button_x     = (canvas.width - button_width) / 2;
var top_button_y = (canvas.height - button_height) / 5;

// Positions for the game buttons.
var game_button_top_height 		= canvas.height / 33;
var game_button_bottom_height 	= canvas.height / 2;
var game_button_dim 			= (canvas.width - canvas.width / 3) / 2;
var game_button_left_pos		= canvas.height / 5;
var game_button_right_pos 		= canvas.width / 2;

gfx.drawSvg("images/start_button.svg", button_x, top_button_y, button_width, button_height);
gfx.drawSvg("images/highscore_button.svg", button_x, top_button_y * 2, button_width, button_height);
gfx.drawSvg("images/settings_button.svg", button_x, top_button_y * 3, button_width, button_height);
gfx.drawSvg("images/rules_button.svg", button_x, top_button_y * 4, button_width, button_height);

// Clear the canvas when Start Game is pushed.
document.getElementById('startGameButtonID').addEventListener('click', startGame(), false);
// Clear the canvas when Start Game is pushed.
document.getElementById('settingsButtonID').addEventListener('click', settings(), false);
  </script>